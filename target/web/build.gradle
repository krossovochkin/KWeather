buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url "https://maven.pkg.jetbrains.space/public/p/compose/dev"
        }
    }
    dependencies {
        classpath libs.gradle.plugin.kotlin
        classpath libs.gradle.plugin.compose
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.pkg.jetbrains.space/public/p/compose/dev"
    }
}

apply plugin: "kotlin-multiplatform"
apply plugin: "org.jetbrains.compose"

kotlin {
    js(IR) {
        browser()
        binaries.executable()
    }
    sourceSets {
        jsMain {
            dependencies {
                implementation compose.web.core
                implementation compose.runtime
                implementation project(":shared")
            }
        }
    }
}

String getApiKey() {
    def ciKey = System.getenv()['API_KEY']
    def localKey = findProperty("kweather_api_key")
    if (ciKey != null) {
        return ciKey
    } else if (localKey != null) {
        return localKey
    } else {
        throw Exception("Can't find API key")
    }
}
